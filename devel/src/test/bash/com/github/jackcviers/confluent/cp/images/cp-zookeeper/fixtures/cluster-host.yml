# Copyright 2022 Jack Viers

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: '3.9'
services:
  zookeeper-1:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
      - io.confluent.docker.testing=true

  zookeeper-2:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
      - io.confluent.docker.testing=true

  zookeeper-3:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    labels:
      - io.confluent.docker.testing=true


  kerberos:
    image: localhost:5000/jackcviers/cp-kerberos
    network_mode: host
    environment:
      BOOTSTRAP: 0
    volumes:
      - keytabs:/var/run/krb5
      - /dev/urandom:/dev/random
    labels:
      - io.confluent.docker.testing=true

  zookeeper-sasl-1:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22889:23889;localhost:32889:33889;localhost:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-1-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
      - ./secrets:/etc/kafka/secrets
      - keytabs:/var/run/krb5
    network_mode: host
    labels:
      - io.confluent.docker.testing=true

  zookeeper-sasl-2:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22889:23889;localhost:32889:33889;localhost:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-2-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
      - ./secrets:/etc/kafka/secrets
      - keytabs:/var/run/krb5
    network_mode: host
    labels:
      - io.confluent.docker.testing=true

  zookeeper-sasl-3:
    image: localhost:5000/jackcviers/cp-zookeeper:7.0.0
    # This is required because Zookeeper can fail if kerberos is still initializing.
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22889:23889;localhost:32889:33889;localhost:42889:43889
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/host-3-jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/host-krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
      - ./secrets:/etc/kafka/secrets
      - keytabs:/var/run/krb5
    network_mode: host
    labels:
      - io.confluent.docker.testing=true
volumes:
  keytabs:
  data:
  log:
